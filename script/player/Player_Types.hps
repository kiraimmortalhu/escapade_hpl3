
/////////////////////////////////////////////////
// ENUMS
//////////////////////////////////////////////////

//----------------------------------------------


shared enum eMoveState
{
	// Added in PlayerStates.cfg
	// Extend these for a game-specific stuff in custom/player/PlayerTypes_Custom.hps.
	eMoveState_Normal=0,
	eMoveState_Climb=1,
	eMoveState_Dead=2,
	eMoveState_LastEnum
}

//----------------------------------------------

shared enum ePlayerState
{
	// Added in PlayerStates.cfg
	// Extend these for a game-specific stuff in custom/player/PlayerTypes_Custom.hps.
	ePlayerState_Normal=0,
	ePlayerState_Null=1,
	ePlayerState_Dead=2,
	ePlayerState_Grab=3,
	ePlayerState_Push=4,
	ePlayerState_Wheel=5,
	ePlayerState_Slide=6,
	ePlayerState_SwingDoor=7,
	ePlayerState_Lever=8,
	ePlayerState_Tear=9,
	ePlayerState_Terminal=10,
	ePlayerState_Read=11,
	ePlayerState_Ladder=12,
	ePlayerState_ClimbLedge=13,
	ePlayerState_MovingButton=14,
	ePlayerState_InteractiveCameraAnimation=15,
	ePlayerState_Sit=16,
	ePlayerState_Conversation=17,
	ePlayerState_ZoomArea=18,
	ePlayerState_CustomControls=19,
	ePlayerState_CutsceneAnimation=20,
	ePlayerState_InteractiveCutsceneAnimation=21,
	ePlayerState_LastEnum
}

//----------------------------------------------

shared enum eCrossHairState
{
	eCrossHairState_None,
	eCrossHairState_Default,
	eCrossHairState_CarryOneHanded,
	eCrossHairState_Push,
	eCrossHairState_PullLever,
	eCrossHairState_PullLeverSmall,
	eCrossHairState_PullSideways,
	eCrossHairState_PullOut,
	eCrossHairState_PullDoor,
	eCrossHairState_PullDoorHatch,
	eCrossHairState_Rotate,
	eCrossHairState_RotateOneHanded,
	eCrossHairState_PushButton,
	eCrossHairState_PickUp,
	eCrossHairState_PickUpForbidden,
	eCrossHairState_Terminal,
	eCrossHairState_ClimbLadder,
	eCrossHairState_Talk,
	eCrossHairState_Read,
	eCrossHairState_ExitLevel,
	eCrossHairState_ExitLevelLocked,
	eCrossHairState_ClimbLedge,
	eCrossHairState_SitDown,
	eCrossHairState_DefaultLarge,
	eCrossHairState_Examine,
	eCrossHairState_PullVertical,
	eCrossHairState_FireGun,
	eCrossHairState_NoHints,
	eCrossHairState_Touch,
	eCrossHairState_UseCannon,
	eCrossHairState_SnuffOutLamp,
	eCrossHairState_UseFuel,
	eCrossHairState_UseFuelBottle,
	eCrossHairState_UseEmptyBottle,
	eCrossHairState_UseCutters,
	eCrossHairState_UseWrench,
	eCrossHairState_UseLighter,
	eCrossHairState_Aim,
	eCrossHairState_UseTorch,
	eCrossHairState_LastEnum
}

//----------------------------------------------

shared enum eCameraAddType
{
	eCameraAddType_Crouch,
	eCameraAddType_Bob,
	eCameraAddType_Shake,
	eCameraAddType_Climb,
	eCameraAddType_Terminal,
	eCameraAddType_Script,
	eCameraAddType_Dead,
	eCameraAddType_Lean,
	eCameraAddType_Crawl,
	eCameraAddType_Sway,
	eCameraAddType_Conversation,
	eCameraAddType_Vertigo,
	eCameraAddType_DollyZoom,
	eCameraAddType_CombinationLock,
	eCameraAddType_ZoomAreaOffset
}

//----------------------------------------------

shared enum eFootSound
{
	eFootSound_Step,
	eFootSound_Landing
}

//----------------------------------------------

shared enum eFootMoveType
{
	eFootMoveType_Sneak,
	eFootMoveType_Walk,
	eFootMoveType_Run,
	eFootMoveType_LastEnum,
}

//----------------------------------------------

shared enum ePhysicalAction
{
	ePhysicalAction_Climb,
}

//----------------------------------------------

shared enum ePlayerRoll
{
	ePlayerRoll_Script,
	ePlayerRoll_Lean,
	ePlayerRoll_Move,
	ePlayerRoll_Climb,
	ePlayerRoll_Lucidity,
	ePlayerRoll_Roll_Shake
}

//----------------------------------------------

shared enum ePlayerFOVMul
{
	ePlayerFOVMul_Script,
	ePlayerFOVMul_Vertigo,
	ePlayerFOVMul_DollyZoom,
	ePlayerFOVMul_Cutscene,
	ePlayerFOVMul_FOV_Shake,
	ePlayerFOVMul_CheckHealth,
	ePlayerFOVMul_UseItem,
	ePlayerFOVMul_MonsterScreenEffect
}

//----------------------------------------------

enum ePlayerMoveSpeedMulType // Some of these should probably be in PlayerTypes_Custom.hps, but i think that's tru for a lot of stuff in this file
{
	ePlayerMoveSpeedMulType_Script,
	ePlayerMoveSpeedMulType_PlayerState,
	ePlayerMoveSpeedMulType_Sketchbook,
	ePlayerMoveSpeedMulType_Agent,
	ePlayerMoveSpeedMulType_Death,
	ePlayerMoveSpeedMulType_RatBite,
	ePlayerMoveSpeedMulType_Hurt,
	ePlayerMoveSpeedMulType_LastEnum
}

//----------------------------------------------

shared enum eVisibilityType
{
	eVisibilityType_Area,
	eVisibilityType_Damage,
	eVisibilityType_HidingInTheDark,
	eVisibilityType_Flashlight,
}

//----------------------------------------------

shared enum eColorGradingPrio
{
	eColorGradingPrio_WorldGradingTexturePrio = 0,
}

//----------------------------------------------

/////////////////////////////////////////////////
// FUNCTIONS
//////////////////////////////////////////////////

//----------------------------------------------

eCrossHairState PlayerTypes_StringToCrossHairState(const tString&in asStr)
{
	tString sLowerStr = cString_ToLowerCase(asStr);
	
	if(sLowerStr=="none") return eCrossHairState_None;
	if(sLowerStr=="default") return eCrossHairState_Default;
	if(sLowerStr=="carryonehanded") return eCrossHairState_CarryOneHanded;
	if(sLowerStr=="push") return eCrossHairState_Push;
	if(sLowerStr=="pulllever") return eCrossHairState_PullLever;
	if(sLowerStr=="pullleversmall") return eCrossHairState_PullLeverSmall;
	if(sLowerStr=="pullsideways") return eCrossHairState_PullSideways;
	if(sLowerStr=="pullout") return eCrossHairState_PullOut;
	if(sLowerStr=="pulldoor") return eCrossHairState_PullDoor;
	if(sLowerStr=="pulldoorhatch") return eCrossHairState_PullDoorHatch;
	if(sLowerStr=="rotate") return eCrossHairState_Rotate;
	if(sLowerStr=="rotateonehanded") return eCrossHairState_RotateOneHanded;
	if(sLowerStr=="pushbutton") return eCrossHairState_PushButton;
	if(sLowerStr=="pickup") return eCrossHairState_PickUp;
	if(sLowerStr=="pickupforbidden") return eCrossHairState_PickUpForbidden;
	if(sLowerStr=="terminal") return eCrossHairState_Terminal;
	if(sLowerStr=="climbladder") return eCrossHairState_ClimbLadder;
	if(sLowerStr=="talk") return eCrossHairState_Talk;
	if(sLowerStr=="read") return eCrossHairState_Read;
	if(sLowerStr=="exitlevel") return eCrossHairState_ExitLevel;
	if(sLowerStr=="climbledge") return eCrossHairState_ClimbLedge;
	if(sLowerStr=="sitdown") return eCrossHairState_SitDown;
	if(sLowerStr=="examine") return eCrossHairState_Examine;
	if(sLowerStr=="pullvertical") return eCrossHairState_PullVertical;
	if(sLowerStr=="firegun") return eCrossHairState_FireGun;
	if(sLowerStr=="touch") return eCrossHairState_Touch;
	if(sLowerStr=="usecannon") return eCrossHairState_UseCannon;
	if(sLowerStr=="usefuel") return eCrossHairState_UseFuel;
	if(sLowerStr=="usefuelbottle") return eCrossHairState_UseFuelBottle;
	if(sLowerStr=="useemptybottle") return eCrossHairState_UseEmptyBottle;
	if(sLowerStr=="usecutters") return eCrossHairState_UseCutters;
	if(sLowerStr=="usecutters") return eCrossHairState_UseLighter;
	if(sLowerStr=="usewrench") return eCrossHairState_UseWrench;
	if(sLowerStr=="aim") return eCrossHairState_Aim;
	if(sLowerStr=="usetorch") return eCrossHairState_UseTorch;
	
	Error("CrossHairState '"+asStr+"' does not exist");
	return eCrossHairState_None;
}

//----------------------------------------------

/////////////////////////////////////////////////
// CONSTANTS
//////////////////////////////////////////////////

//----------------------------------------------

const float gfPlayer_BodyDefaultMass = 70;

const cVector3f gvBodySize = cVector3f(0.7, 1.95, 0.7);
const cVector3f gvBodyCrouchSize = cVector3f(0.7, 1.15, 0.7);
const cVector3f gvBodyHideSize = cVector3f(0.7, 0.6, 0.7);

//DoctorD edit: previous value glBodyRenderLayer = 0;
int glBodyRenderLayer = 1;
int glArmsRenderLayer = 1;


//----------------------------------------------
