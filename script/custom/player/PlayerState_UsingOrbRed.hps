#include "interfaces/PlayerState_Interface.hps"
#include "custom/player/PlayerState_UsingItem_Base.hps"
#include "base/InputHandler_Types.hps"
#include "player/Player_Types.hps"
#include "helpers/helper_props.hps"
#include "custom/helpers/helper_modules_custom.hps"
#include "helpers/helper_modules.hps"
#include "custom/helpers/helper_items.hps"
#include "custom/helpers/helper_props_custom.hps"

//------------------------------------------------------------

const float gfUsingKey_MinPitch = cMath_ToRad(-55.f);
const float gfUsingKey_MaxPitch = cMath_ToRad(30.f);
const float gfUsingKey_PitchFadeTime = 0.25f;

///////////////
// Player anims
const tString gsKeyUseAnim_Player = "tool_cutter_cut_chain";

//------------------------------------------------------------

class cScrPlayerState_UsingOrbRed : iScrPlayerState_UsingItem_Base, iScrPlayerState_Interface
{
	//------------------------------------------------------------
		
	/////////////////////////////////////////
	// INIT
	/////////////////////////////////////////
	
	//------------------------------------------------------------
	
	void Init()
	{
		iScrPlayerState_UsingItem_Base::Init();
		
		msFocusIntroAnim_R = "tool_orb_equip";
		msFocusLoopAnim_R = "tool_orb_idle";
		msFocusOutroAnim_R = "tool_orb_holster";
	}
	
	//------------------------------------------------------------
	
	/////////////////////////////////////////
	// GENERAL
	/////////////////////////////////////////
	
	//------------------------------------------------------------
	
	void OnEnterState(int alPrevStateId)
	{
		////////////////
		// Enter base
		iScrPlayerState_UsingItem_Base::OnEnterState(alPrevStateId);
		
		////////////////
		// Setup vars
		
		////////////////
		// Setup body
		SetupPitchFade(gfUsingKey_MinPitch, gfUsingKey_MaxPitch, gfUsingKey_PitchFadeTime, false);
	}
	
	//------------------------------------------------------------
	
	//------------------------------------------------------------
	
	/////////////////////////////////////////
	// ACTIONS
	/////////////////////////////////////////
	
	//------------------------------------------------------------
	
	//------------------------------------------------------------
	
	/////////////////////////////////////////
	// HELPERS
	/////////////////////////////////////////
	
	//------------------------------------------------------------
	
	//------------------------------------------------------------
	
	/////////////////////////////////////////
	// DEBUG
	/////////////////////////////////////////
	
	//------------------------------------------------------------
		
	float DrawDebugOutput(cGuiSet@ apSet, iFontData@ apFont, float afStartY)
	{
		return afStartY;
	}
	
	//------------------------------------------------------------
	
	/////////////////////////////////////////
	// PROPERTIES
	/////////////////////////////////////////
	
	//------------------------------------------------------------
	
	//------------------------------------------------------------
}