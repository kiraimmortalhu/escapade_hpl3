<?xml version="1.0"?>

<Inventory>
	<ItemTypes>

		<!-- 
			ID = the type ID
			NameID = the name entry in Inventory/ in the lang file. Defaults to the type ID.
			DescID = the description entry in Inventory/ in the lang file. Defaults to the name + "_Desc"
			AltDescID = the alternative description entry in Inventory/ in the lang file. Defaults to the name + "_AltDesc"
			Combine = comma-delimited list of the things you can combine with. This relationship
					  only works one way - make sure you mention being able to use it in the other direction if
					  you can use that too.

			Inventory: 
				Info for the inventory screen
				Icon = Icon texture for the inventory
				AltIcon = Alternative texture for the inventory
				PickupIcon = Alternative texture for when the item is picked up. Leave empty to use the texture specified in Icon.
				CanDrop = True if the item can be dropped.
				Hidden = Item can be collected but won't show up in the main inventory grid (Used for ammunition and such).
				IsWeapon = If true the item is a weapon.
				
			Bulk: 
				Refers to items that can either be stacked together, or contain an amount of other stuff if Container = true.
				Container = true/false - it can contain stuff.
				ContentType = the type of 'stuff' it contains (see ContentTypes).
				MaxAmount = the maximum amount of stuff if can hold. -1 means unlimited.
				InitAmountRange = the initial amount of stuff it holds when a new one is spawned ("X,Y", random value generated from X-Y) (default 1,1) if the pickup entity has a ContentLevel value of -1.
				
			Use: 
				RequiredToUseItem = "Item ID" - An item we need to have in the inventory in order to be able to use this one.
				OnSelf = true/false - whether you can use it on yourself (default false).
				CanUseOnSelfMapCallback = will be called in the map instead of the default CanUseOnSelf handler in ItemCallbacks. bool Fn(const tString& in asItemType, const tString& in asItemID).
				UseOnSelfMapCallback = will be called in the map instead of the default UseOnSelf handler in ItemCallbacks. bool Fn(const tString& in asItemType, const tString& in asItemID, const tString& in asItemEntity, float afTimeElapsed, float afTimeStep) - return true if you handled the call.
				OnWorld = true/false - whether you can use it on something in the world (default false).
				CanUseOnWorldMapCallback = will be called in the map instead of the default CanUseOnWorld handler in ItemCallbacks. bool Fn(const tString& in asItemType, const tString& in asItemID, const tString& in asPickedEntity).
				UseOnWorldMapCallback = will be called in the map instead of the default UseOnWorld handler in ItemCallbacks. bool Fn(const tString& in asItemType, const tString& in asItemID, const tString& in asTargetEntity, const tString& in asItemEntity, float afTimeElapsed, float afTimeStep) - return true if you handled the call.
				CanUse = true/false - can move around while using the item (default false).
				UsingState = "stateNum" - Use this state instead of PlayerState_UsingItem. Has to be the state ID num, sorry!
				
			Hands: 
				UsesArmAnimation = "true" - When hand animations should be played on equip.
				UseArmAnimationYaw = true/false - If player yaw should affect animation (default true).
				UseArmAnimationPitch = true/false - If player yaw should affect animation (default true).
				UseParentBoneRotation = true/false - If the item should align with the rotation of the bone parent to the socket it's attached to
				EntityFile = "filename" - The entity to spawn into player's hand if UsesArmAnimation is true.
				LeftHand = "true" - when you take it out, stick it in your left hand.
				DropEntityFile = "filename" - The entity to spawn when the player drops the item from the inventory. If "" the EntityFile is used instead.
				LightSource = "true" - if true, the item will be triggered by the Flashlight hotkey.
				AccessoryEntityFile = "filename" - The entity file that'll be attached to the specified accessory socket.
				AccessorySocket = "socket name" - A socket on the player body that the AccessoryEntityFile will be attached to.
				EntityScale = the scale mul of the prop. Default = 1
				AccessoryEntityScale = the scale mul of the accessory version of the prop. Default = 1
				UnequipToggleDelay = Time AFTER unequipping the item through a toggle button before you can equip something else with a toggle. Mostly to prevent weird animation glitches when spamming the buttons. Defaults to 0.5.
				EquipToggleDelay = Time AFTER equipping the item through a toggle button before you can unequip it or equip something else with a toggle. Mostly to prevent weird animation glitches when spamming the buttons and to avoid accidentally unequipping the item before it has shown up on screen. Defaults to 0.5.
				UsesInspectAnimation = Plays "draw_inspect" animation instead of "draw" on equip.
		-->
		
		<!-- Escapade custom items -->
		
		<ItemType ID="Orb">
			<Inventory Icon="inventory_item_dw_orb" AltIcon="inventory_item_dw_orb_shine"/>
			<Hands UsesArmAnimation="true" EntityFile="dw_orb_new_02_inverted_pickup.ent" UseParentBoneRotation="true"/>
			<Use OnWorld="true" UsingState="99" CanUseOnWorldMapCallback="CanUse_Orb" UseOnWorldMapCallback="OnUse_Orb"/>
		</ItemType>
		
		<ItemType ID="OrbRed">
			<Inventory Icon="inventory_item_dw_orbred" AltIcon="inventory_item_dw_orbred_shine"/>
			<Hands UsesArmAnimation="true" EntityFile="red_orb_pickup.ent" UseParentBoneRotation="true"/>
			<Use OnWorld="true" UsingState="99" CanUseOnWorldMapCallback="CanUse_Orb" UseOnWorldMapCallback="OnUse_Orb"/>
		</ItemType>
		
		<ItemType ID="ChurchKey">
			<Inventory Icon="inventory_item_transmitterkey"/>
			<Use OnWorld="true" UsingState="95" CanUseOnWorldMapCallback="CanUse_ChurchKey" UseOnWorldMapCallback="OnUse_ChurchKey"/>
			<Hands UsesArmAnimation="true" EntityFile="transmitter_key_hand.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
        <ItemType ID="Lever">
			<Inventory Icon="inventory_item_leverhandle"/>
            <Use OnWorld="true" UsingState="100" CanUseOnWorldMapCallback="CanUse_Lever" UseOnWorldMapCallback="OnUse_Lever"/>
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" EntityFile="slide_door_lever_handle_hand.ent" DropEntityFile="slide_door_lever_handle_pickup.ent"/>
		</ItemType>
		
		<!-- End of custom items -->
		
		<ItemType ID="Fuel" Combine="EmptyBottle, EmptyMolotovCocktail">
			<Inventory Icon="inventory_item_fuel" CanDrop="true"/>
			<Use OnWorld="true" UsingState="87" CanUseOnWorldMapCallback="CanUse_Fuel" UseOnWorldMapCallback="OnUse_Fuel"/>
			<Hands UsesArmAnimation="true" EntityFile="fuel_medium_hand.ent" DropEntityFile="fuel_medium_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="EmptyMolotovCocktail" Combine="Fuel, FuelBottle">
			<Inventory Icon="inventory_item_empty_molotov" CanDrop="true"/>
			<Use OnWorld="true" UsingState="94" CanUseOnWorldMapCallback="CanUse_EmptyBottle" UseOnWorldMapCallback="OnUse_EmptyBottle"/>
			<Hands UsesArmAnimation="true" EntityFile="molotov_cocktail_empty_hand.ent" DropEntityFile="molotov_cocktail_empty_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="EmptyBottle" Combine="Fuel, ClothPiece">
			<Inventory Icon="inventory_item_bottle" CanDrop="true"/>
			<Use OnWorld="true" UsingState="71" CanUseOnWorldMapCallback="CanUse_EmptyBottle" UseOnWorldMapCallback="OnUse_EmptyBottle"/>
			<Hands UsesArmAnimation="true" EntityFile="empty_bottle_hand.ent" DropEntityFile="empty_bottle_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="ClothPiece" Combine="Stick, FuelBottle, ClothPiece, EmptyBottle">
			<Inventory Icon="inventory_item_rag" CanDrop="true"/>
			<Hands UsesArmAnimation="false" EntityFile="rag_pickup.ent"/>
		</ItemType>

		<ItemType ID="FuelBottle" Combine="ClothPiece, EmptyMolotovCocktail">
			<Inventory Icon="inventory_item_fuel_bottle" CanDrop="true"/>
			<Use OnWorld="true" UsingState="93" CanUseOnWorldMapCallback="CanUse_FuelBottle" UseOnWorldMapCallback="OnUse_FuelBottle"/>
			<Hands UsesArmAnimation="true" EntityFile="full_bottle_hand.ent" DropEntityFile="full_bottle_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="MolotovCocktail">
			<Inventory Icon="inventory_item_molotov" CanDrop="true"/>
			<Use OnWorld="true" RequiredToUseItem="Lighter" UsingState="77"/>
			<Hands UsesArmAnimation="true" EntityFile="molotov_cocktail_hand.ent" DropEntityFile="molotov_cocktail_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="Gun">
			<Inventory Icon="inventory_item_revolver" IsWeapon="true"/>
			<Use OnWorld="true" />
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" EntityFile="revolver_hand.ent"/>
		</ItemType>
		
		<ItemType ID="Shotgun">
			<Inventory Icon="inventory_item_shotgun" IsWeapon="true"/>
			<Use OnWorld="true" />
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" EntityFile="trench_shotgun_hand.ent"/>
		</ItemType>
		
		<ItemType ID="Ammunition">
			<Bulk MaxAmount="9999999"/>
			<Inventory Icon="inventory_item_bullet" Hidden="true"/>
			<Hands DropEntityFile="ammo_bullets.ent"/>
			<Use OnSelf="false" />
		</ItemType>

		<ItemType ID="ShotgunAmmunition">
			<Bulk MaxAmount="9999999"/>
			<Inventory Icon="inventory_item_shell" Hidden="true"/>
			<Hands DropEntityFile="ammo_shotgun_box.ent"/>
			<Use OnSelf="false" />
		</ItemType>

		<ItemType ID="DynamoLantern">
			<Inventory Icon="inventory_item_magnetlampe"/>
			<Use OnWorld="true"/>
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" LeftHand="true" LightSource="true" EntityFile="magnetlampe_hand.ent"/>
		</ItemType>

		<ItemType ID="Stick" Combine="ClothPiece">
			<Inventory Icon="inventory_item_stick" CanDrop="true"/>
			<Hands UsesArmAnimation="true" EntityFile="torch_stick_pickup.ent"/>
		</ItemType>

		<ItemType ID="Torch">
			<Inventory Icon="inventory_item_torch" CanDrop="true"/>
			<Use OnWorld="true" RequiredToUseItem="Lighter" UsingState="78"/>
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" LightSource="true" EntityFile="torch_lit_hand.ent" DropEntityFile="torch_pickup.ent"/>
		</ItemType>
		
		<ItemType ID="PocketWatch">
			<Inventory Icon="inventory_item_stopwatch"/>
			<Use OnWorld="true" UsingState="70"/>
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" EntityFile="stopwatch_hand.ent"/>
		</ItemType>
		
		<ItemType ID="Grenade">
			<Inventory Icon="inventory_item_grenade" CanDrop="true"/>
			<Use OnWorld="true" UsingState="72"/>
			<Hands UsesArmAnimation="true" EntityFile="grenade_hand.ent" DropEntityFile="grenade_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="GasGrenade">
			<Inventory Icon="inventory_item_grenade_gas" CanDrop="true"/>
			<Use OnWorld="true" UsingState="73"/>
			<Hands UsesArmAnimation="true" EntityFile="gas_grenade_hand.ent" DropEntityFile="gas_grenade_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="Cutters">
			<Inventory Icon="inventory_item_cutter_chain"/>
			<Use OnWorld="true" UsingState="74"/>
			<Hands UsesArmAnimation="true" EntityFile="chain_cutters_hand.ent" DropEntityFile="chain_cutters_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="Wrench">
			<Inventory Icon="inventory_item_wrench"/>
			<Use OnWorld="true" UsingState="82"/>
			<Hands UsesArmAnimation="true" EntityFile="wrench_hand.ent" DropEntityFile="wrench.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="GasMask">
			<Inventory Icon="inventory_item_mask_gas"/>
			<Use OnSelf="true"/>
			<Hands UsesArmAnimation="false" EntityFile="gas_mask_pickup.ent"/>
		</ItemType>
		
		<ItemType ID="Flare">
			<Inventory Icon="inventory_item_flare" CanDrop="true"/>
			<Use OnWorld="true" UsingState="75"/>
			<Hands UsesArmAnimation="true" EntityFile="flare_hand.ent" DropEntityFile="flare_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="Lighter">
			<Inventory Icon="inventory_item_lighter"/>
			<Use OnWorld="true" UsingState="76"/>
			<Hands UsesArmAnimation="true"  UseParentBoneRotation="true" EntityFile="lighter_hand_new.ent"/>
		</ItemType>

		<ItemType ID="PocketBag">
			<Inventory Icon="inventory_item_pocket_bag"/>
			<Use OnSelf="true"/>
		</ItemType>
		
		<ItemType ID="Medkit">
			<Inventory Icon="inventory_item_medkit" CanDrop="true"/>
			<Use OnSelf="true" UsingState="88"/>
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" EntityFile="medkit_cutscene.ent" DropEntityFile="medkit_pickup.ent" />
		</ItemType>

		<ItemType ID="Bandage">
			<Inventory Icon="inventory_item_bandage_01.dds" CanDrop="true"/>
			<Use OnSelf="true" UsingState="88"/>
			<Hands UsesArmAnimation="true" UseParentBoneRotation="true" EntityFile="bandage_cutscene.ent" DropEntityFile="bandage_pickup.ent"/>
		</ItemType>
		
		<ItemType ID="Dynamite">
			<Inventory Icon="inventory_item_dynamite_bundle.dds"/>
			<Use OnWorld="true" RequiredToUseItem="Lighter"/>
			<Hands UsesArmAnimation="false" EntityFile="dynamite_stick_pickup.ent"/>
		</ItemType>

		<ItemType ID="DynamiteBundle">
			<Inventory Icon="inventory_item_dynamite_bundle.dds"/>
			<Use OnWorld="true" UsingState="84" CanUseOnWorldMapCallback="CanUse_DynamiteBundle" UseOnWorldMapCallback="OnUse_DynamiteBundle" />
			<Hands UsesArmAnimation="true" EntityFile="dynamite_bundle_hand.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="Meat">
			<Inventory Icon="inventory_meat_01.dds" CanDrop="true"/>
			<Use OnWorld="true" UsingState="80"/>
			<Hands UsesArmAnimation="true" EntityFile="meat_chunk_01_inventory.ent" DropEntityFile="meat_chunk_01_thrown.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="LockdownWheel">
			<Inventory Icon="inventory_item_lockdownwheel.dds"/>
			<Use OnWorld="true" UsingState="86" CanUseOnWorldMapCallback="CanUse_LockdownWheel" UseOnWorldMapCallback="OnUse_LockdownWheel"/>
			<Hands UsesArmAnimation="true" EntityFile="lockdown_wheel_hand.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="DetonatorHandle">
			<Inventory Icon="inventory_item_detonator_handle.dds"/>
			<Use OnWorld="true" UsingState="90" CanUseOnWorldMapCallback="CanUse_DetonatorHandle" UseOnWorldMapCallback="OnUse_DetonatorHandle"/>
			<Hands UsesArmAnimation="true" EntityFile="detonator_handle_hand.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="RabbitDoll">
			<Inventory Icon="inventory_item_doll_rabbit.dds" CanDrop="true"/>
			<Use OnWorld="true" UsingState="96"/>
			<Hands UsesArmAnimation="true" EntityFile="doll_rabbit_hand.ent" DropEntityFile="doll_rabbit_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="CommunicationsKey">
			<Inventory Icon="inventory_item_key_communications.dds"/>
			<Use OnWorld="true" UsingState="95" CanUseOnWorldMapCallback="CanUse_CommunicationsKey" UseOnWorldMapCallback="OnUse_CommunicationsKey"/>
			<Hands UsesArmAnimation="true" EntityFile="metal_door_key_communications_hand.ent" UseParentBoneRotation="true"/>
		</ItemType>

		<ItemType ID="PillboxKey">
			<Inventory Icon="inventory_item_key_pillbox.dds"/>
			<Use OnWorld="true" UsingState="95" CanUseOnWorldMapCallback="CanUse_PillboxKey" UseOnWorldMapCallback="OnUse_PillboxKey"/>
			<Hands UsesArmAnimation="true" EntityFile="metal_door_key_pillbox_hand.ent" UseParentBoneRotation="true"/>
		</ItemType>
		
		<ItemType ID="Fuse">
			<Inventory Icon="inventory_item_fuse" CanDrop="true"/>
			<Use OnWorld="true" UsingState="98" CanUseOnWorldMapCallback="" UseOnWorldMapCallback=""/>
			<Hands UsesArmAnimation="true" EntityFile="fuse_hand.ent" DropEntityFile="fuse_pickup.ent" UseParentBoneRotation="true"/>
		</ItemType>
	</ItemTypes>
	
	<!-- Defines the contents that can be in containers. Doesn't allow mixing! -->
	<ContentTypes>
		<ContentType ID="Liquid">
			<SubType ID="Water"/>
			<SubType ID="Blood"/>
		</ContentType>
		<ContentType ID="Oil">
			<SubType ID="Oil"/>
		</ContentType>
	</ContentTypes>
	
	<!-- Startup -->
	<Startup>
	</Startup>
	
</Inventory>